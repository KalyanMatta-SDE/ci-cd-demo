package com.employee.EmployeeCurdOperations.service;import com.employee.EmployeeCurdOperations.dto.EmployeeDTO;import com.employee.EmployeeCurdOperations.entity.Employee;import org.modelmapper.ModelMapper;import org.springframework.context.annotation.Lazy;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Service;import javax.annotation.PostConstruct;import java.util.ArrayList;import java.util.List;@Service@Lazy@Scope("prototype")public class EmployeeService {    List<Employee> employeeList = new ArrayList<>();    ModelMapper mapper = new ModelMapper();    public EmployeeService(){        System.out.println("Employee service constructor is called");    }    @PostConstruct    public void init(){        employeeList.add(new Employee(1, "Kalyan", 26, 1200));        employeeList.add(new Employee(2, "RAm", 24, 2200));        employeeList.add(new Employee(3, "Santosh", 28, 3200));        employeeList.add(new Employee(4, "Vijay", 29, 4200));        employeeList.add(new Employee(5, "Somash", 30, 6200));        System.out.println("service layer hashcode" + this.hashCode());    }    public List<Employee> allEmployeesList(){        return employeeList;    }    public Employee getEmployeeById(int id) {        long value =                employeeList.stream().filter((emp) -> emp.getId() == id).count();        if(value != 0){            return employeeList.get(id);        }else{            return null;        }    }    public Employee addNewEmployee(EmployeeDTO employeeDTO){        Employee newEmployee = mapper.map(employeeDTO, Employee.class);        //System.out.println("In added new employee : " + newEmployee);        employeeList.add(newEmployee);        return newEmployee;    }    public Employee updateEmployeeById(int id, EmployeeDTO employeeDTO){        employeeList.remove(id);        Employee updateEmp = mapper.map(employeeDTO, Employee.class);        employeeList.add(updateEmp);        return updateEmp;    }    public Employee deleteEmployee(int id){        Employee deletedEmp = employeeList.get(id);        employeeList.remove(id);        return deletedEmp;    }    public Employee updateDetails(int id, EmployeeDTO employeeDTO){        employeeList.remove(id);        Employee updatedEmployee = mapper.map(employeeDTO, Employee.class);        employeeList.add(updatedEmployee);        return updatedEmployee;    }}